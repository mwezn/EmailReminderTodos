{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _objectSpread from\"/home/tank/Desktop/TODO/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import'./App.css';import React from'react';import{AuthContext}from'../App';function Complete(props){var _React$useContext=React.useContext(AuthContext),dispatch=_React$useContext.dispatch;function removeDone(i){var newObj=_objectSpread({},props.user);var item=newObj.done.splice(i,1);console.log(item);var requestOptions={method:'POST',//mode: 'cors',\nheaders:{'Content-Type':'application/json'},body:JSON.stringify({data:newObj,Item:item})};fetch('http://localhost:3001/removeDone',requestOptions).then(function(res){return res.json();}).then(function(resJSON){return dispatch({type:\"SETREMINDER\",payload:resJSON});});}var items2=props.user.done.map(function(d,i){return/*#__PURE__*/_jsxs(\"li\",{className:\"completedList\",children:[\"Task:\".concat(d.todo,\", date: \").concat(d.date,\", time:\").concat(d.time),/*#__PURE__*/_jsxs(\"span\",{className:\"close\",onClick:function onClick(){return removeDone(i);},children:[\"X\",/*#__PURE__*/_jsx(\"span\",{class:\"tooltiptext\",children:\"Delete?\"})]})]},i);});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{id:\"box\",children:\"Your completed tasks:\"}),/*#__PURE__*/_jsx(\"ul\",{children:items2})]});}export default Complete;","map":{"version":3,"sources":["/home/tank/Desktop/TODO/Client/src/containers/Complete.js"],"names":["React","AuthContext","Complete","props","useContext","dispatch","removeDone","i","newObj","user","item","done","splice","console","log","requestOptions","method","headers","body","JSON","stringify","data","Item","fetch","then","res","json","resJSON","type","payload","items2","map","d","todo","date","time"],"mappings":"4OAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,QAA5B,CAIA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAwB,uBACCH,KAAK,CAACI,UAAN,CAAiBH,WAAjB,CADD,CACZI,QADY,mBACZA,QADY,CAEpB,QAASC,CAAAA,UAAT,CAAoBC,CAApB,CAAuB,CACnB,GAAIC,CAAAA,MAAM,kBAAQL,KAAK,CAACM,IAAd,CAAV,CACA,GAAIC,CAAAA,IAAI,CAAGF,MAAM,CAACG,IAAP,CAAYC,MAAZ,CAAmBL,CAAnB,CAAsB,CAAtB,CAAX,CACAM,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EACA,GAAMK,CAAAA,cAAc,CAAG,CACrBC,MAAM,CAAE,MADa,CAErB;AACAC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAHY,CAIrBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEC,IAAI,CAAEb,MAAR,CAAgBc,IAAI,CAAEZ,IAAtB,CAAf,CAJe,CAAvB,CAOAa,KAAK,CAAC,kCAAD,CAAqCR,cAArC,CAAL,CACGS,IADH,CACQ,SAAAC,GAAG,CAAI,CAAE,MAAOA,CAAAA,GAAG,CAACC,IAAJ,EAAP,CAAmB,CADpC,EAEGF,IAFH,CAEQ,SAAAG,OAAO,QAAItB,CAAAA,QAAQ,CAAC,CAAEuB,IAAI,CAAE,aAAR,CAAuBC,OAAO,CAAEF,OAAhC,CAAD,CAAZ,EAFf,EAGD,CAIH,GAAMG,CAAAA,MAAM,CAAG3B,KAAK,CAACM,IAAN,CAAWE,IAAX,CAAgBoB,GAAhB,CAAoB,SAACC,CAAD,CAAIzB,CAAJ,qBAAU,YAAI,SAAS,CAAC,eAAd,0BAA+CyB,CAAC,CAACC,IAAjD,oBAAgED,CAAC,CAACE,IAAlE,mBAAgFF,CAAC,CAACG,IAAlF,eAAyF,cAAM,SAAS,CAAC,OAAhB,CAAwB,OAAO,CAAE,yBAAM7B,CAAAA,UAAU,CAACC,CAAD,CAAhB,EAAjC,4BAAwD,aAAM,KAAK,CAAC,aAAZ,qBAAxD,GAAzF,GAAmCA,CAAnC,CAAV,EAApB,CAAf,CACA,mBACE,oCACE,WAAI,EAAE,CAAC,KAAP,mCADF,cAEE,oBACGuB,MADH,EAFF,GADF,CAQD,CAIC,cAAe5B,CAAAA,QAAf","sourcesContent":["import './App.css'\nimport React from 'react';\nimport { AuthContext } from '../App'\n\n\n\nfunction Complete(props){\n    const { dispatch } = React.useContext(AuthContext);\n    function removeDone(i) {\n        let newObj = { ...props.user }\n        let item = newObj.done.splice(i, 1)\n        console.log(item)\n        const requestOptions = {\n          method: 'POST',\n          //mode: 'cors',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ data: newObj, Item: item })\n        }\n    \n        fetch('http://localhost:3001/removeDone', requestOptions)\n          .then(res => { return res.json() })\n          .then(resJSON => dispatch({ type: \"SETREMINDER\", payload: resJSON }))\n      }\n\n\n\n    const items2 = props.user.done.map((d, i) => <li className=\"completedList\" key={i}>{`Task:${d.todo}, date: ${d.date}, time:${d.time}`}<span className=\"close\" onClick={() => removeDone(i)} >X<span class=\"tooltiptext\">Delete?</span></span></li>)\n    return (\n      <div>\n        <h1 id=\"box\">Your completed tasks:</h1>\n        <ul>\n          {items2}\n        </ul>\n      </div>\n  );\n  }\n  \n  \n  \n    export default Complete"]},"metadata":{},"sourceType":"module"}