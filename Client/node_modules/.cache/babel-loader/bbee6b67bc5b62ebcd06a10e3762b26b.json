{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tank/Desktop/ToDoList/src/containers/Login.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useContext } from \"react\";\nimport { AuthContext } from '../App';\nexport default function Login() {\n  _s();\n\n  const [loginCredentials, setParams] = useState({\n    email: \"\",\n    password: \"\",\n    emailExist: null,\n    passCorrect: null\n  });\n  const {\n    dispatch\n  } = useContext(AuthContext);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      //mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: 'React POST Request Example',\n        data: loginCredentials\n      })\n    };\n    fetch('http://localhost:3001/login', requestOptions).then(res => {\n      if (res.status === 401) {\n        const newObj = {\n          passCorrect: false\n        };\n        setParams(oldObj => {\n          return { ...oldObj,\n            ...newObj\n          };\n        });\n      } else if (res.status === 400) {\n        const newObj = {\n          emailExist: false\n        };\n        setParams(oldObj => {\n          return { ...oldObj,\n            ...newObj\n          };\n        });\n      }\n\n      return res.json();\n    }).then(resJSON => dispatch({\n      type: \"LOGIN\",\n      payload: resJSON\n    })).then(() => console.log(localStorage.getItem('token') + \"HAHA GOTIT\"));\n  }\n\n  function enterEmail(e) {\n    const newObj = {\n      email: e.target.value\n    };\n    setParams(oldObj => {\n      return { ...oldObj,\n        ...newObj\n      };\n    });\n  }\n\n  function enterPassword(e) {\n    const newObj = {\n      password: e.target.value\n    };\n    setParams(oldObj => {\n      return { ...oldObj,\n        ...newObj\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loginCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"loginCardItems\",\n        onSubmit: e => handleSubmit(e),\n        method: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter Email\",\n          onChange: e => enterEmail(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 115\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"pass\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"pass\",\n          placeholder: \"Enter Password\",\n          onChange: e => enterPassword(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 119\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"loginBtn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: loginCredentials.emailExist === false ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"emailTaken\",\n            children: \"Email doesn't exist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 51\n          }, this) : loginCredentials.passCorrect === false ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"emailTaken\",\n            children: \"Wrong Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 138\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"nJkpryKC8GI2FwvuZB/GXakoUgc=\");\n\n_c = Login;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/tank/Desktop/ToDoList/src/containers/Login.js"],"names":["React","useState","useContext","AuthContext","Login","loginCredentials","setParams","email","password","emailExist","passCorrect","dispatch","handleSubmit","event","preventDefault","requestOptions","method","headers","body","JSON","stringify","title","data","fetch","then","res","status","newObj","oldObj","json","resJSON","type","payload","console","log","localStorage","getItem","enterEmail","e","target","value","enterPassword"],"mappings":"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","sourcesContent":["import {React, useState, useContext} from \"react\";\nimport { AuthContext } from '../App'\n\n\nexport default function Login() {\n  \n  const [loginCredentials, setParams] = useState({email: \"\", password: \"\", emailExist:null, passCorrect: null});\n  const  { dispatch } = useContext(AuthContext);\n  \n\n\n\n  \n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      //mode: 'cors',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ title: 'React POST Request Example',data: loginCredentials})\n  };\n  \n  fetch('http://localhost:3001/login',requestOptions)\n     .then(res => {\n       if (res.status===401) {\n        const newObj={passCorrect: false}\n        setParams(oldObj=>{ return {...oldObj, ...newObj}})\n      }\n      else if(res.status===400){\n        const newObj={emailExist: false}\n        setParams(oldObj=>{return {...oldObj, ...newObj}})\n      }\n      return res.json()\n    })\n    .then(resJSON=>dispatch({type: \"LOGIN\", payload: resJSON}))\n    .then(()=>console.log(localStorage.getItem('token')+\"HAHA GOTIT\"))\n  \n  }\n  \n\n  \n  function enterEmail(e){\n    const newObj={email:e.target.value}\n    setParams(oldObj=>{\n        return {...oldObj,...newObj}\n    })\n    \n  }\n  function enterPassword(e){\n    const newObj={password:e.target.value}\n    setParams(oldObj=>{\n        return {...oldObj,...newObj}\n    })\n    \n  }\n\n\n\n  return (\n    <div>\n    <div id=\"loginCard\">\n    <form id=\"loginCardItems\" onSubmit={(e)=>handleSubmit(e)} method=\"post\">\n        <label for=\"email\">Email:</label><br></br>\n        <input type=\"email\" name=\"email\" placeholder=\"Enter Email\" onChange={(e)=>enterEmail(e)} required></input><br></br>\n        <label for=\"pass\">Password:</label><br></br>\n        <input type=\"text\" name=\"pass\" placeholder=\"Enter Password\" onChange={(e)=>enterPassword(e)} required></input><br></br>\n        <button className=\"loginBtn\">Login</button>\n    </form> \n    <div><h1>{loginCredentials.emailExist===false?<p className=\"emailTaken\">Email doesn't exist</p>:loginCredentials.passCorrect===false?<p className=\"emailTaken\">Wrong Password</p>:null}</h1></div>\n    </div>\n    </div>\n    \n  );\n  };"]},"metadata":{},"sourceType":"module"}