{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tank/Desktop/TODO/Client/src/containers/Complete.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport { AuthContext } from '../App';\n\nfunction Complete(props) {\n  _s();\n\n  const {\n    dispatch\n  } = React.useContext(AuthContext);\n\n  function removeDone(i) {\n    let newObj = { ...props.user\n    };\n    let item = newObj.done.splice(i, 1);\n    console.log(item);\n    const requestOptions = {\n      method: 'POST',\n      //mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data: newObj,\n        Item: item\n      })\n    };\n    fetch('http://localhost:3001/removeDone', requestOptions).then(res => {\n      return res.json();\n    }).then(resJSON => dispatch({\n      type: \"SETREMINDER\",\n      payload: resJSON\n    }));\n  }\n\n  const items2 = props.user.done.map((d, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"completedList\",\n    children: [`Task:${d.todo}, date: ${d.date}, time:${d.time}`, /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"close\",\n      onClick: () => removeDone(i),\n      children: [\"X\", /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"tooltiptext\",\n        children: \"Delete?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 195\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 139\n    }, this)]\n  }, i, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 50\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"box\",\n      children: \"Your completed tasks:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Complete, \"y0TpHjmA0G5gpKtNPtwKueTIMNE=\");\n\n_c = Complete;\nexport default Complete;\n\nvar _c;\n\n$RefreshReg$(_c, \"Complete\");","map":{"version":3,"sources":["/home/tank/Desktop/TODO/Client/src/containers/Complete.js"],"names":["React","AuthContext","Complete","props","dispatch","useContext","removeDone","i","newObj","user","item","done","splice","console","log","requestOptions","method","headers","body","JSON","stringify","data","Item","fetch","then","res","json","resJSON","type","payload","items2","map","d","todo","date","time"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,QAA5B;;AAIA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,KAAK,CAACK,UAAN,CAAiBJ,WAAjB,CAArB;;AACA,WAASK,UAAT,CAAoBC,CAApB,EAAuB;AACnB,QAAIC,MAAM,GAAG,EAAE,GAAGL,KAAK,CAACM;AAAX,KAAb;AACA,QAAIC,IAAI,GAAGF,MAAM,CAACG,IAAP,CAAYC,MAAZ,CAAmBL,CAAnB,EAAsB,CAAtB,CAAX;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAMK,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErB;AACAC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAHY;AAIrBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,IAAI,EAAEb,MAAR;AAAgBc,QAAAA,IAAI,EAAEZ;AAAtB,OAAf;AAJe,KAAvB;AAOAa,IAAAA,KAAK,CAAC,kCAAD,EAAqCR,cAArC,CAAL,CACGS,IADH,CACQC,GAAG,IAAI;AAAE,aAAOA,GAAG,CAACC,IAAJ,EAAP;AAAmB,KADpC,EAEGF,IAFH,CAEQG,OAAO,IAAIvB,QAAQ,CAAC;AAAEwB,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAEF;AAAhC,KAAD,CAF3B;AAGD;;AAIH,QAAMG,MAAM,GAAG3B,KAAK,CAACM,IAAN,CAAWE,IAAX,CAAgBoB,GAAhB,CAAoB,CAACC,CAAD,EAAIzB,CAAJ,kBAAU;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA,eAAwC,QAAOyB,CAAC,CAACC,IAAK,WAAUD,CAAC,CAACE,IAAK,UAASF,CAAC,CAACG,IAAK,EAAvF,eAAyF;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAE,MAAM7B,UAAU,CAACC,CAAD,CAAjD;AAAA,mCAAwD;AAAM,QAAA,KAAK,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzF;AAAA,KAAmCA,CAAnC;AAAA;AAAA;AAAA;AAAA,UAA9B,CAAf;AACA,sBACE;AAAA,4BACE;AAAI,MAAA,EAAE,EAAC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGuB;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA7BM5B,Q;;KAAAA,Q;AAiCL,eAAeA,QAAf","sourcesContent":["import './App.css'\nimport React from 'react';\nimport { AuthContext } from '../App'\n\n\n\nfunction Complete(props){\n    const { dispatch } = React.useContext(AuthContext);\n    function removeDone(i) {\n        let newObj = { ...props.user }\n        let item = newObj.done.splice(i, 1)\n        console.log(item)\n        const requestOptions = {\n          method: 'POST',\n          //mode: 'cors',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ data: newObj, Item: item })\n        }\n    \n        fetch('http://localhost:3001/removeDone', requestOptions)\n          .then(res => { return res.json() })\n          .then(resJSON => dispatch({ type: \"SETREMINDER\", payload: resJSON }))\n      }\n\n\n\n    const items2 = props.user.done.map((d, i) => <li className=\"completedList\" key={i}>{`Task:${d.todo}, date: ${d.date}, time:${d.time}`}<span className=\"close\" onClick={() => removeDone(i)} >X<span class=\"tooltiptext\">Delete?</span></span></li>)\n    return (\n      <div>\n        <h1 id=\"box\">Your completed tasks:</h1>\n        <ul>\n          {items2}\n        </ul>\n      </div>\n  );\n  }\n  \n  \n  \n    export default Complete"]},"metadata":{},"sourceType":"module"}