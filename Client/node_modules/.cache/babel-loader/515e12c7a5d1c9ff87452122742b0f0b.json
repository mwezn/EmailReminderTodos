{"ast":null,"code":"import _regeneratorRuntime from \"/home/tank/Desktop/TODO/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectSpread from \"/home/tank/Desktop/TODO/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/tank/Desktop/TODO/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/tank/Desktop/TODO/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/tank/Desktop/TODO/Client/src/containers/Login.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useContext } from \"react\";\nimport { AuthContext } from '../App';\nexport default function Login() {\n  _s();\n\n  var _useState = useState({\n    email: \"\",\n    password: \"\",\n    emailExist: null,\n    passCorrect: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginCredentials = _useState2[0],\n      setParams = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      dispatch = _useContext.dispatch;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var requestOptions;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              requestOptions = {\n                method: 'POST',\n                //mode: 'cors',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  title: 'React POST Request Example',\n                  data: loginCredentials\n                })\n              };\n              fetch('/login', requestOptions) //<--This needs changing to /login\n              .then(function (res) {\n                if (res.status === 401) {\n                  var newObj = {\n                    passCorrect: false\n                  };\n                  setParams(function (oldObj) {\n                    return _objectSpread(_objectSpread({}, oldObj), newObj);\n                  });\n                } else if (res.status === 400) {\n                  var _newObj = {\n                    emailExist: false\n                  };\n                  setParams(function (oldObj) {\n                    return _objectSpread(_objectSpread({}, oldObj), _newObj);\n                  });\n                }\n\n                return res.json();\n              }).then(function (resJSON) {\n                return dispatch({\n                  type: \"LOGIN\",\n                  payload: resJSON\n                });\n              }).then(function () {\n                return console.log(localStorage.getItem('token') + \"HAHA GOTIT\");\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function enterEmail(e) {\n    var newObj = {\n      email: e.target.value\n    };\n    setParams(function (oldObj) {\n      return _objectSpread(_objectSpread({}, oldObj), newObj);\n    });\n  }\n\n  function enterPassword(e) {\n    var newObj = {\n      password: e.target.value\n    };\n    setParams(function (oldObj) {\n      return _objectSpread(_objectSpread({}, oldObj), newObj);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loginCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"loginCardItems\",\n        onSubmit: function onSubmit(e) {\n          return handleSubmit(e);\n        },\n        method: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter Email\",\n          onChange: function onChange(e) {\n            return enterEmail(e);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 115\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"pass\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"pass\",\n          placeholder: \"Enter Password\",\n          onChange: function onChange(e) {\n            return enterPassword(e);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 119\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"loginBtn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: loginCredentials.emailExist === false ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"emailTaken\",\n            children: \"Email doesn't exist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 51\n          }, this) : loginCredentials.passCorrect === false ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"emailTaken\",\n            children: \"Wrong Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 138\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"nJkpryKC8GI2FwvuZB/GXakoUgc=\");\n\n_c = Login;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/tank/Desktop/TODO/Client/src/containers/Login.js"],"names":["React","useState","useContext","AuthContext","Login","email","password","emailExist","passCorrect","loginCredentials","setParams","dispatch","handleSubmit","event","preventDefault","requestOptions","method","headers","body","JSON","stringify","title","data","fetch","then","res","status","newObj","oldObj","json","resJSON","type","payload","console","log","localStorage","getItem","enterEmail","e","target","value","enterPassword"],"mappings":"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","sourcesContent":["import {React, useState, useContext} from \"react\";\nimport { AuthContext } from '../App'\n\n\nexport default function Login() {\n  \n  const [loginCredentials, setParams] = useState({email: \"\", password: \"\", emailExist:null, passCorrect: null});\n  const  { dispatch } = useContext(AuthContext);\n  \n\n\n\n  \n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      //mode: 'cors',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ title: 'React POST Request Example',data: loginCredentials})\n  };\n  \n  fetch('/login',requestOptions) //<--This needs changing to /login\n     .then(res => {\n       if (res.status===401) {\n        const newObj={passCorrect: false}\n        setParams(oldObj=>{ return {...oldObj, ...newObj}})\n      }\n      else if(res.status===400){\n        const newObj={emailExist: false}\n        setParams(oldObj=>{return {...oldObj, ...newObj}})\n      }\n      return res.json()\n    })\n    .then(resJSON=>dispatch({type: \"LOGIN\", payload: resJSON}))\n    .then(()=>console.log(localStorage.getItem('token')+\"HAHA GOTIT\"))\n  \n  }\n  \n\n  \n  function enterEmail(e){\n    const newObj={email:e.target.value}\n    setParams(oldObj=>{\n        return {...oldObj,...newObj}\n    })\n    \n  }\n  function enterPassword(e){\n    const newObj={password:e.target.value}\n    setParams(oldObj=>{\n        return {...oldObj,...newObj}\n    })\n    \n  }\n\n\n\n  return (\n    <div>\n    <div id=\"loginCard\">\n    <form id=\"loginCardItems\" onSubmit={(e)=>handleSubmit(e)} method=\"post\">\n        <label for=\"email\">Email:</label><br></br>\n        <input type=\"email\" name=\"email\" placeholder=\"Enter Email\" onChange={(e)=>enterEmail(e)} required></input><br></br>\n        <label for=\"pass\">Password:</label><br></br>\n        <input type=\"text\" name=\"pass\" placeholder=\"Enter Password\" onChange={(e)=>enterPassword(e)} required></input><br></br>\n        <button className=\"loginBtn\">Login</button>\n    </form> \n    <div><h1>{loginCredentials.emailExist===false?<p className=\"emailTaken\">Email doesn't exist</p>:loginCredentials.passCorrect===false?<p className=\"emailTaken\">Wrong Password</p>:null}</h1></div>\n    </div>\n    </div>\n    \n  );\n  };"]},"metadata":{},"sourceType":"module"}